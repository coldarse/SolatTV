{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BackgroundImageComponent = class BackgroundImageComponent {\n  constructor(route) {\n    this.route = route;\n    this.duration = 50;\n    this.available_images = [{\n      src: '../../assets/media/bg1.jpg',\n      file: 'bg1'\n    }, {\n      src: '../../assets/media/bg2.jpg',\n      file: 'bg2'\n    }, {\n      src: '../../assets/media/bg1.jpg',\n      file: 'bg1'\n    }];\n    this.images = [{\n      file: 'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit: false\n    }, {\n      file: 'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit: false\n    }, {\n      file: 'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit: false\n    }, {\n      file: 'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit: false\n    }, {\n      file: 'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit: false\n    }, {\n      file: 'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit: false\n    }, {\n      file: 'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit: false\n    }];\n  }\n  backToMenu() {\n    this.route.navigate(['menu']);\n  }\n  editItem(index) {\n    this.images[index].edit = !this.images[index].edit;\n  }\n  deleteItem(index) {\n    this.images.splice(index, 1);\n  }\n  selectedImage(index, src, file) {\n    this.images[index].src = src;\n    this.images[index].file = file;\n  }\n  selectedNewImage(src, file) {\n    let lastIndex = this.images.length + 1;\n    this.newImage = {\n      file: file,\n      src: src,\n      order: lastIndex,\n      edit: false\n    };\n  }\n  upSequence(index) {\n    const tempVal = this.images[index];\n    const i = this.images.indexOf(tempVal);\n    if (i > -1) {\n      this.images.splice(index, 1);\n    }\n    const newIndex = index - 1;\n    this.images.splice(newIndex, 0, tempVal);\n  }\n  downSequence(index) {\n    const tempVal = this.images[index];\n    const i = this.images.indexOf(tempVal);\n    if (i > -1) {\n      this.images.splice(index, 1);\n    }\n    const newIndex = index + 1;\n    this.images.splice(newIndex, 0, tempVal);\n  }\n};\nBackgroundImageComponent = __decorate([Component({\n  selector: 'app-background-image',\n  templateUrl: './background-image.component.html',\n  styleUrls: ['./background-image.component.css']\n})], BackgroundImageComponent);","map":{"version":3,"names":["Component","BackgroundImageComponent","constructor","route","duration","available_images","src","file","images","order","edit","backToMenu","navigate","editItem","index","deleteItem","splice","selectedImage","selectedNewImage","lastIndex","length","newImage","upSequence","tempVal","i","indexOf","newIndex","downSequence","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/danny/Documents/GitHub/SolatTV/src/app/background-image/background-image.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-background-image',\n  templateUrl: './background-image.component.html',\n  styleUrls: ['./background-image.component.css']\n})\nexport class BackgroundImageComponent {\n\n  duration = 50;\n\n  newImage: any;\n\n  available_images = [\n    {\n      src:'../../assets/media/bg1.jpg',\n      file: 'bg1'\n    },\n    {\n      src:'../../assets/media/bg2.jpg',\n      file: 'bg2'\n    },\n    {\n      src:'../../assets/media/bg1.jpg',\n      file: 'bg1'\n    }\n  ]\n\n  images = [\n    {\n      file:'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit:false\n    },\n    {\n      file:'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit:false\n    },\n    {\n      file:'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit:false\n    },\n    {\n      file:'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit:false\n    },\n    {\n      file:'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit:false\n    },\n    {\n      file:'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit:false\n    },\n    {\n      file:'bg1',\n      src: '../../assets/media/bg1.jpg',\n      order: '',\n      edit:false\n    }\n  ];\n\n  constructor(\n    private route: Router,\n  ){}\n\n  backToMenu(){\n    this.route.navigate(['menu']);\n  }\n\n  editItem(index: number){\n    this.images[index].edit = !this.images[index].edit;\n  }\n\n  deleteItem(index: number){\n    this.images.splice(index, 1);\n  }\n\n  selectedImage(index: number, src: string, file: string){\n    this.images[index].src = src;\n    this.images[index].file = file;\n  }\n\n  selectedNewImage(src: string, file: string){\n    let lastIndex = this.images.length + 1;\n    this.newImage = \n    {\n      file: file,\n      src: src,\n      order: lastIndex,\n      edit: false\n    }\n  }\n\n  upSequence(index: number){\n    const tempVal = this.images[index];\n    const i = this.images.indexOf(tempVal);\n    if (i > -1) { \n      this.images.splice(index, 1);\n    }\n    const newIndex = index - 1;\n    this.images.splice(newIndex, 0, tempVal);\n  }\n\n  downSequence(index: number){\n    const tempVal = this.images[index];\n    const i = this.images.indexOf(tempVal);\n    if (i > -1) { \n      this.images.splice(index, 1);\n    }\n    const newIndex = index + 1;\n    this.images.splice(newIndex, 0, tempVal);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}