{"ast":null,"code":"import { appFunc } from '../_models/appFunc';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../header/header.component\";\nimport * as i2 from \"../footer/footer.component\";\nimport * as i3 from \"../content/content.component\";\nexport class DashboardComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.template = 1;\n    this.bgImg = '';\n    this.counter = 0;\n    this.img_duration = 15000;\n    //Call API in this component\n    this.images = [{\n      val: 'bg1',\n      order: 0\n    }, {\n      val: 'bg2',\n      order: 2\n    }, {\n      val: 'bg3',\n      order: 1\n    }];\n    this.periods = [{\n      period: 'Imsak',\n      time: '05:52'\n    }, {\n      period: 'Subuh',\n      time: '07:07'\n    }, {\n      period: 'Syuruk',\n      time: '12:20'\n    }, {\n      period: 'Zohor',\n      time: '16:46'\n    }, {\n      period: 'Asar',\n      time: '19:31'\n    }, {\n      period: 'Maghrib',\n      time: '20:47'\n    }, {\n      period: 'Isyak',\n      time: '02:25'\n    }];\n  }\n  ngOnDestroy() {\n    clearInterval(this.text_interval);\n  }\n  ngOnInit() {\n    this.images = appFunc.sortArr(this.images);\n    this.imgCycle();\n    this.img_interval = setInterval(() => {\n      this.imgCycle();\n    }, this.img_duration);\n  }\n  imgCycle() {\n    this.bgImg = this.images[this.counter].val;\n    this.elementRef.nativeElement.ownerDocument.body.style.setProperty(\"background-image\", `url(../../assets/images/${this.bgImg}.jpg)`);\n    if (this.counter == this.images.length - 1) {\n      this.counter = -1;\n    }\n    this.counter++;\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 3,\n  vars: 4,\n  consts: [[3, \"template\", \"periods\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\", 0)(1, \"app-content\")(2, \"app-footer\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"template\", ctx.template)(\"periods\", ctx.periods);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"template\", ctx.template)(\"periods\", ctx.periods);\n    }\n  },\n  dependencies: [i1.HeaderComponent, i2.FooterComponent, i3.ContentComponent],\n  styles: [\"body{\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: cover;\\n    height: 100%;\\n    transition: background-image 1s linear;\\n}\\n\\nhtml{\\n    height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLDRCQUE0QjtJQUM1QixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLHNDQUFzQztBQUMxQzs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5e1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtaW1hZ2UgMXMgbGluZWFyO1xufVxuXG5odG1se1xuICAgIGhlaWdodDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n  encapsulation: 2\n});","map":{"version":3,"names":["appFunc","DashboardComponent","constructor","elementRef","template","bgImg","counter","img_duration","images","val","order","periods","period","time","ngOnDestroy","clearInterval","text_interval","ngOnInit","sortArr","imgCycle","img_interval","setInterval","nativeElement","ownerDocument","body","style","setProperty","length","i0","ɵɵdirectiveInject","ElementRef","selectors","decls","vars","consts","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","ɵɵadvance"],"sources":["/Users/danny/Documents/GitHub/SolatTV/src/app/dashboard/dashboard.component.ts","/Users/danny/Documents/GitHub/SolatTV/src/app/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { appFunc } from '../_models/appFunc';\nimport { SolatService } from '../solat.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  encapsulation: ViewEncapsulation.None, //Used to overwrite parent component css\n})\nexport class DashboardComponent implements OnInit {\n\n  template = 1;\n  bgImg = '';\n  counter = 0;\n  img_duration = 15000;\n\n  img_interval: any;\n\n  //Call API in this component\n  images = [\n    {\n      val: 'bg1',\n      order: 0,\n    },\n    {\n      val: 'bg2',\n      order: 2,\n    },\n    {\n      val: 'bg3',\n      order: 1,\n    },\n  ];\n\n  periods = [\n    {\n      period: 'Imsak',\n      time: '05:52',\n    },\n    {\n      period: 'Subuh',\n      time: '07:07',\n    },\n    {\n      period: 'Syuruk',\n      time: '12:20',\n    },\n    {\n      period: 'Zohor',\n      time: '16:46',\n    },\n    {\n      period: 'Asar',\n      time: '19:31',\n    },\n    {\n      period: 'Maghrib',\n      time: '20:47',\n    },\n    {\n      period: 'Isyak',\n      time: '02:25',\n    },\n  ]\n\n\n  constructor(private elementRef: ElementRef){}\n\n  ngOnDestroy(): void{\n    clearInterval(this.text_interval);\n  }\n\n  ngOnInit(): void {\n\n    this.images = appFunc.sortArr(this.images);\n\n    this.imgCycle();\n    this.img_interval = setInterval(() => {\n      this.imgCycle()\n    }, this.img_duration);\n  }\n\n  imgCycle(){\n    this.bgImg = this.images[this.counter].val;\n    this.elementRef.nativeElement.ownerDocument.body.style.setProperty(\"background-image\", `url(../../assets/images/${this.bgImg}.jpg)`);\n    if (this.counter == this.images.length - 1){\n      this.counter = -1;\n    }\n    this.counter++;\n  }\n\n  \n\n}\n","<app-header [template]=\"template\" [periods]=\"periods\"></app-header>\n<app-content></app-content>\n<app-footer [template]=\"template\" [periods]=\"periods\"></app-footer>"],"mappings":"AACA,SAASA,OAAO,QAAQ,oBAAoB;;;;;AAS5C,OAAM,MAAOC,kBAAkB;EAyD7BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAvD9B,KAAAC,QAAQ,GAAG,CAAC;IACZ,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,OAAO,GAAG,CAAC;IACX,KAAAC,YAAY,GAAG,KAAK;IAIpB;IACA,KAAAC,MAAM,GAAG,CACP;MACEC,GAAG,EAAE,KAAK;MACVC,KAAK,EAAE;KACR,EACD;MACED,GAAG,EAAE,KAAK;MACVC,KAAK,EAAE;KACR,EACD;MACED,GAAG,EAAE,KAAK;MACVC,KAAK,EAAE;KACR,CACF;IAED,KAAAC,OAAO,GAAG,CACR;MACEC,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;KACP,EACD;MACED,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;KACP,EACD;MACED,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE;KACP,EACD;MACED,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;KACP,EACD;MACED,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;KACP,EACD;MACED,MAAM,EAAE,SAAS;MACjBC,IAAI,EAAE;KACP,EACD;MACED,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;KACP,CACF;EAG2C;EAE5CC,WAAWA,CAAA;IACTC,aAAa,CAAC,IAAI,CAACC,aAAa,CAAC;EACnC;EAEAC,QAAQA,CAAA;IAEN,IAAI,CAACT,MAAM,GAAGR,OAAO,CAACkB,OAAO,CAAC,IAAI,CAACV,MAAM,CAAC;IAE1C,IAAI,CAACW,QAAQ,EAAE;IACf,IAAI,CAACC,YAAY,GAAGC,WAAW,CAAC,MAAK;MACnC,IAAI,CAACF,QAAQ,EAAE;IACjB,CAAC,EAAE,IAAI,CAACZ,YAAY,CAAC;EACvB;EAEAY,QAAQA,CAAA;IACN,IAAI,CAACd,KAAK,GAAG,IAAI,CAACG,MAAM,CAAC,IAAI,CAACF,OAAO,CAAC,CAACG,GAAG;IAC1C,IAAI,CAACN,UAAU,CAACmB,aAAa,CAACC,aAAa,CAACC,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,kBAAkB,EAAE,2BAA2B,IAAI,CAACrB,KAAK,OAAO,CAAC;IACpI,IAAI,IAAI,CAACC,OAAO,IAAI,IAAI,CAACE,MAAM,CAACmB,MAAM,GAAG,CAAC,EAAC;MACzC,IAAI,CAACrB,OAAO,GAAG,CAAC,CAAC;;IAEnB,IAAI,CAACA,OAAO,EAAE;EAChB;;AAhFWL,kBAAkB,C;mBAAlBA,kBAAkB,EAAA2B,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;AAAlB7B,kBAAkB,C;QAAlBA,kBAAkB;EAAA8B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA9B,QAAA,WAAA+B,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV/BR,EAAA,CAAAU,SAAA,oBAAmE;;;MAAvDV,EAAA,CAAAW,UAAA,aAAAF,GAAA,CAAAjC,QAAA,CAAqB,YAAAiC,GAAA,CAAA1B,OAAA;MAErBiB,EAAA,CAAAY,SAAA,GAAqB;MAArBZ,EAAA,CAAAW,UAAA,aAAAF,GAAA,CAAAjC,QAAA,CAAqB,YAAAiC,GAAA,CAAA1B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}