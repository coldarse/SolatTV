{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class appFunc {\n  static obj_cycle(counter, obj_arr, obj) {\n    obj = obj_arr[counter].val;\n    if (counter == obj) ;\n  }\n  static sortArr(obj_arr) {\n    obj_arr.sort((a, b) => a.order - b.order);\n    return obj_arr;\n  }\n}\nappFunc.ɵfac = function appFunc_Factory(t) {\n  return new (t || appFunc)();\n};\nappFunc.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: appFunc,\n  factory: appFunc.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["appFunc","obj_cycle","counter","obj_arr","obj","val","sortArr","sort","a","b","order","factory","ɵfac","providedIn"],"sources":["/Users/danny/Documents/GitHub/SolatTV/src/app/_models/appFunc.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class appFunc {\n    static obj_cycle(counter: number, obj_arr: any[], obj: string){\n        obj = obj_arr[counter].val;\n        if(counter == obj)\n    }\n\n    static sortArr(obj_arr: any[]) : any[]{\n        obj_arr.sort((a, b) => a.order - b.order);\n        return obj_arr;\n    }\n}"],"mappings":";AAMA,OAAM,MAAOA,OAAO;EAChB,OAAOC,SAASA,CAACC,OAAe,EAAEC,OAAc,EAAEC,GAAW;IACzDA,GAAG,GAAGD,OAAO,CAACD,OAAO,CAAC,CAACG,GAAG;IAC1B,IAAGH,OAAO,IAAIE,GAAG,EACrB;EAAA;EAEA,OAAOE,OAAOA,CAACH,OAAc;IACzBA,OAAO,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC;IACzC,OAAOP,OAAO;EAClB;;AATSH,OAAO,C;mBAAPA,OAAO;AAAA;AAAPA,OAAO,C;SAAPA,OAAO;EAAAW,OAAA,EAAPX,OAAO,CAAAY,IAAA;EAAAC,UAAA,EAHJ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}