{"ast":null,"code":"import { appFunc } from '../_models/appFunc';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../header/header.component\";\nimport * as i3 from \"../footer/footer.component\";\nimport * as i4 from \"../content/content.component\";\nfunction DashboardComponent_app_header_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-header\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"template\", ctx_r0.template)(\"periods\", ctx_r0.periods);\n  }\n}\nfunction DashboardComponent_app_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-content\");\n  }\n}\nfunction DashboardComponent_app_footer_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-footer\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"template\", ctx_r2.template)(\"periods\", ctx_r2.periods);\n  }\n}\nexport class DashboardComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.template = 2;\n    this.bgImg = '';\n    this.counter = 0;\n    this.img_duration = 15000;\n    this.isFullScreen = false;\n    //Call API in this component\n    this.images = [{\n      val: 'bg1',\n      order: 0\n    }, {\n      val: 'bg2',\n      order: 2\n    }, {\n      val: 'bg3',\n      order: 1\n    }];\n    this.periods = [{\n      period: 'Imsak',\n      time: '05:52',\n      order: 0\n    }, {\n      period: 'Subuh',\n      time: '07:07',\n      order: 1\n    }, {\n      period: 'Syuruk',\n      time: '12:20',\n      order: 2\n    }, {\n      period: 'Zohor',\n      time: '16:46',\n      order: 3\n    }, {\n      period: 'Asar',\n      time: '19:31',\n      order: 4\n    }, {\n      period: 'Maghrib',\n      time: '20:47',\n      order: 5\n    }, {\n      period: 'Isyak',\n      time: '02:25',\n      order: 6\n    }];\n  }\n  ngOnDestroy() {\n    clearInterval(this.img_interval);\n  }\n  ngOnInit() {\n    this.images = appFunc.sortArr(this.images);\n    this.imgCycle();\n    this.img_interval = setInterval(() => {\n      this.imgCycle();\n    }, this.img_duration);\n  }\n  imgCycle() {\n    this.bgImg = this.images[this.counter].val;\n    this.elementRef.nativeElement.ownerDocument.body.style.setProperty(\"background-image\", `url(../../assets/images/${this.bgImg}.jpg)`);\n    if (this.counter == this.images.length - 1) {\n      this.counter = -1;\n    }\n    this.counter++;\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"template\", \"periods\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"template\", \"periods\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DashboardComponent_app_header_0_Template, 1, 2, \"app-header\", 0);\n      i0.ɵɵtemplate(1, DashboardComponent_app_content_1_Template, 1, 0, \"app-content\", 1);\n      i0.ɵɵtemplate(2, DashboardComponent_app_footer_2_Template, 1, 2, \"app-footer\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isFullScreen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isFullScreen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isFullScreen);\n    }\n  },\n  dependencies: [i1.NgIf, i2.HeaderComponent, i3.FooterComponent, i4.ContentComponent],\n  styles: [\"body{\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: cover;\\n    height: 100%;\\n    transition: background-image 1s linear;\\n}\\n\\nhtml{\\n    height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLDRCQUE0QjtJQUM1QixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLHNDQUFzQztBQUMxQzs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5e1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtaW1hZ2UgMXMgbGluZWFyO1xufVxuXG5odG1se1xuICAgIGhlaWdodDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n  encapsulation: 2\n});","map":{"version":3,"names":["appFunc","i0","ɵɵelement","ɵɵproperty","ctx_r0","template","periods","ctx_r2","DashboardComponent","constructor","elementRef","bgImg","counter","img_duration","isFullScreen","images","val","order","period","time","ngOnDestroy","clearInterval","img_interval","ngOnInit","sortArr","imgCycle","setInterval","nativeElement","ownerDocument","body","style","setProperty","length","ɵɵdirectiveInject","ElementRef","selectors","decls","vars","consts","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_app_header_0_Template","DashboardComponent_app_content_1_Template","DashboardComponent_app_footer_2_Template","ɵɵadvance"],"sources":["/Users/danny/Documents/GitHub/SolatTV/src/app/dashboard/dashboard.component.ts","/Users/danny/Documents/GitHub/SolatTV/src/app/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { appFunc } from '../_models/appFunc';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  encapsulation: ViewEncapsulation.None, //Used to overwrite parent component css\n})\nexport class DashboardComponent implements OnInit {\n\n  template = 2;\n  bgImg = '';\n  counter = 0;\n  img_duration = 15000;\n\n  isFullScreen = false;\n\n  img_interval: any;\n\n  //Call API in this component\n  images = [\n    {\n      val: 'bg1',\n      order: 0,\n    },\n    {\n      val: 'bg2',\n      order: 2,\n    },\n    {\n      val: 'bg3',\n      order: 1,\n    },\n  ];\n\n  periods = [\n    {\n      period: 'Imsak',\n      time: '05:52',\n      order: 0,\n    },\n    {\n      period: 'Subuh',\n      time: '07:07',\n      order: 1,\n    },\n    {\n      period: 'Syuruk',\n      time: '12:20',\n      order: 2,\n    },\n    {\n      period: 'Zohor',\n      time: '16:46',\n      order: 3,\n    },\n    {\n      period: 'Asar',\n      time: '19:31',\n      order: 4,\n    },\n    {\n      period: 'Maghrib',\n      time: '20:47',\n      order: 5,\n    },\n    {\n      period: 'Isyak',\n      time: '02:25',\n      order: 6,\n    },\n  ]\n\n\n  constructor(private elementRef: ElementRef){}\n\n  ngOnDestroy(): void{\n    clearInterval(this.img_interval);\n  }\n\n  ngOnInit(): void {\n\n    this.images = appFunc.sortArr(this.images);\n\n    this.imgCycle();\n    this.img_interval = setInterval(() => {\n      this.imgCycle()\n    }, this.img_duration);\n  }\n\n  imgCycle(){\n    this.bgImg = this.images[this.counter].val;\n    this.elementRef.nativeElement.ownerDocument.body.style.setProperty(\"background-image\", `url(../../assets/images/${this.bgImg}.jpg)`);\n    if (this.counter == this.images.length - 1){\n      this.counter = -1;\n    }\n    this.counter++;\n  }\n\n  \n\n}\n","<app-header \n    [template]=\"template\" \n    [periods]=\"periods\"\n    *ngIf=\"!isFullScreen\"\n></app-header>\n<app-content\n    *ngIf=\"!isFullScreen\"\n></app-content>\n<app-footer \n    [template]=\"template\" \n    [periods]=\"periods\"\n    *ngIf=\"!isFullScreen\"\n></app-footer>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}