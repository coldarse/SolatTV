{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, retry, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BackgroundImageService {\n  constructor(http) {\n    this.http = http;\n    this.api = '/backgroundimage/';\n    this.url = 'http://127.0.0.1:8000' + this.api;\n    this.options = {\n      headers: new HttpHeaders({\n        \"Accept\": \"*/*\"\n      })\n    };\n  }\n  handleError(error) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    return throwError(error);\n  }\n  create(body) {\n    return this.http.post(this.url + 'api/', body, this.options).pipe(retry(1), catchError(this.handleError));\n  }\n  update(body, id) {\n    return this.http.put(this.url + `api/${id}`, body, this.options).pipe(retry(1), catchError(this.handleError));\n  }\n  delete(id) {\n    return this.http.delete(this.url + `api/${id}`, this.options).pipe(retry(1), catchError(this.handleError));\n  }\n  get(id) {\n    return this.http.get(this.url + `api/${id}`, this.options).pipe(retry(1), catchError(this.handleError));\n  }\n  getall() {\n    return this.http.get(this.url + 'api/', body).pipe(retry(1), catchError(this.handleError));\n  }\n  getall_bi(isBackground) {}\n}\nBackgroundImageService.ɵfac = function BackgroundImageService_Factory(t) {\n  return new (t || BackgroundImageService)(i0.ɵɵinject(i1.HttpClient));\n};\nBackgroundImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BackgroundImageService,\n  factory: BackgroundImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","catchError","retry","throwError","BackgroundImageService","constructor","http","api","url","options","headers","handleError","error","ErrorEvent","console","message","status","create","body","post","pipe","update","id","put","delete","get","getall","getall_bi","isBackground","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/danny/Documents/GitHub/SolatTV/src/shared/proxy/backgroundimage/backgroundimage.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { catchError, retry, throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackgroundImageService{\n\n    url: any;\n    api: any;\n    options: any;\n\n    constructor(private http: HttpClient){\n        this.api = '/backgroundimage/';\n        this.url = 'http://127.0.0.1:8000' + this.api;\n        this.options = {\n            headers: new HttpHeaders({\n                \"Accept\": \"*/*\"\n            })\n        }\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n        console.error('An error occurred:', error.error.message);\n        } else {\n        console.error(\n            `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n        );\n        }\n        return throwError(error);\n    }\n\n    create(body: any){\n        return this.http.post(\n            this.url + 'api/',\n            body,\n            this.options\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        )\n    }\n\n    update(body: any, id: number){\n        return this.http.put(\n            this.url + `api/${id}`,\n            body,\n            this.options\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        )\n    }\n    \n\n    delete(id: number){\n        return this.http.delete(\n            this.url + `api/${id}`,\n            this.options\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        )\n    }\n\n    get(id: number){\n        return this.http.get(\n            this.url + `api/${id}`,\n            this.options\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        )\n    }\n\n    getall(){\n        return this.http.get(\n            this.url + 'api/',\n            body\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        )\n    }\n\n    getall_bi(isBackground: string){\n\n    }\n\n\n}"],"mappings":"AACA,SAAwCA,WAAW,QAAQ,sBAAsB;AACjF,SAASC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,MAAM;;;AAMpD,OAAM,MAAOC,sBAAsB;EAM/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACpB,IAAI,CAACC,GAAG,GAAG,mBAAmB;IAC9B,IAAI,CAACC,GAAG,GAAG,uBAAuB,GAAG,IAAI,CAACD,GAAG;IAC7C,IAAI,CAACE,OAAO,GAAG;MACXC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACrB,QAAQ,EAAE;OACb;KACJ;EACL;EAEQW,WAAWA,CAACC,KAAwB;IACxC,IAAIA,KAAK,CAACA,KAAK,YAAYC,UAAU,EAAE;MACvCC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC;KACvD,MAAM;MACPD,OAAO,CAACF,KAAK,CACT,yBAAyBA,KAAK,CAACI,MAAM,IAAI,GAAG,aAAaJ,KAAK,CAACA,KAAK,EAAE,CACzE;;IAED,OAAOT,UAAU,CAACS,KAAK,CAAC;EAC5B;EAEAK,MAAMA,CAACC,IAAS;IACZ,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CACjB,IAAI,CAACX,GAAG,GAAG,MAAM,EACjBU,IAAI,EACJ,IAAI,CAACT,OAAO,CACf,CAACW,IAAI,CACFlB,KAAK,CAAC,CAAC,CAAC,EACRD,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC/B;EACL;EAEAU,MAAMA,CAACH,IAAS,EAAEI,EAAU;IACxB,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAChB,IAAI,CAACf,GAAG,GAAG,OAAOc,EAAE,EAAE,EACtBJ,IAAI,EACJ,IAAI,CAACT,OAAO,CACf,CAACW,IAAI,CACFlB,KAAK,CAAC,CAAC,CAAC,EACRD,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC/B;EACL;EAGAa,MAAMA,CAACF,EAAU;IACb,OAAO,IAAI,CAAChB,IAAI,CAACkB,MAAM,CACnB,IAAI,CAAChB,GAAG,GAAG,OAAOc,EAAE,EAAE,EACtB,IAAI,CAACb,OAAO,CACf,CAACW,IAAI,CACFlB,KAAK,CAAC,CAAC,CAAC,EACRD,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC/B;EACL;EAEAc,GAAGA,CAACH,EAAU;IACV,OAAO,IAAI,CAAChB,IAAI,CAACmB,GAAG,CAChB,IAAI,CAACjB,GAAG,GAAG,OAAOc,EAAE,EAAE,EACtB,IAAI,CAACb,OAAO,CACf,CAACW,IAAI,CACFlB,KAAK,CAAC,CAAC,CAAC,EACRD,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC/B;EACL;EAEAe,MAAMA,CAAA;IACF,OAAO,IAAI,CAACpB,IAAI,CAACmB,GAAG,CAChB,IAAI,CAACjB,GAAG,GAAG,MAAM,EACjBU,IAAI,CACP,CAACE,IAAI,CACFlB,KAAK,CAAC,CAAC,CAAC,EACRD,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC/B;EACL;EAEAgB,SAASA,CAACC,YAAoB,GAE9B;;AAlFSxB,sBAAsB,C;mBAAtBA,sBAAsB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAtB5B,sBAAsB,C;SAAtBA,sBAAsB;EAAA6B,OAAA,EAAtB7B,sBAAsB,CAAA8B,IAAA;EAAAC,UAAA,EAFrB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}