{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let InformationComponent = class InformationComponent {\n  constructor(mosqueprofileService) {\n    this.mosqueprofileService = mosqueprofileService;\n    this.weekday_bm = ['Ahad', 'Isnin', 'Selasa', 'Rabu', 'Khamis', 'Jumaat', 'Sabtu'];\n    this.month_bm = ['Januari', 'Februari', 'Mac', 'April', 'Mei', 'Jun', 'Julai', 'Ogos', 'September', 'Oktober', 'November', 'Disember'];\n    this.today_day = '';\n    this.today_date = '';\n    this.today_month = '';\n    this.today_year = '';\n    this.islamic_date = '';\n    this.mosque_name = '';\n    this.mosque_info = '';\n  }\n  ngOnInit() {\n    this.mosqueprofileService.get(1).subscribe(data => {\n      this.mosqueprofile = data;\n      this.logoURL = this.mosqueprofile.src;\n      this.mosque_name = this.mosqueprofile.mosque1 + ' ' + this.mosqueprofile.mosque2;\n      this.mosque_info = this.mosqueprofile.address + ' | ' + this.mosqueprofile.telephone;\n      this.time_interval = setInterval(() => {\n        this.date = new Date();\n        this.time_now = Date.now();\n        this.today_day = this.weekday_bm[this.date.getDay()];\n        this.today_date = this.date.getDate();\n        this.today_year = this.date.getFullYear();\n        this.today_month = this.month_bm[this.date.getMonth()];\n      }, 1000);\n    });\n  }\n};\nInformationComponent = __decorate([Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.css']\n})], InformationComponent);","map":{"version":3,"names":["Component","InformationComponent","constructor","mosqueprofileService","weekday_bm","month_bm","today_day","today_date","today_month","today_year","islamic_date","mosque_name","mosque_info","ngOnInit","get","subscribe","data","mosqueprofile","logoURL","src","mosque1","mosque2","address","telephone","time_interval","setInterval","date","Date","time_now","now","getDay","getDate","getFullYear","getMonth","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/danny/Documents/GitHub/SolatTV/src/app/information/information.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MosqueProfileService } from 'src/shared/proxy/mosqueprofile/mosqueprofile.service';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.css']\n})\nexport class InformationComponent implements OnInit {\n  weekday_bm = [\n    'Ahad',\n    'Isnin',\n    'Selasa',\n    'Rabu',\n    'Khamis',\n    'Jumaat',\n    'Sabtu'\n  ];\n  month_bm = [\n    'Januari', \n    'Februari', \n    'Mac', \n    'April', \n    'Mei', \n    'Jun', \n    'Julai', \n    'Ogos', \n    'September', \n    'Oktober', \n    'November', \n    'Disember'\n  ]\n\n  date: any;\n  today_day = '';\n  today_date = '';\n  today_month = '';\n  today_year = '';\n  islamic_date = '';\n  time_now: number | undefined;\n\n  mosque_name = '';\n\n  mosque_info = '';\n\n  time_interval: any;\n\n  mosqueprofile: any;\n\n  logoURL: any;\n\n  constructor(\n    private mosqueprofileService: MosqueProfileService,\n  ){}\n\n  ngOnInit(): void {\n\n    this.mosqueprofileService.get(1).subscribe((data: any) => {\n      this.mosqueprofile = data;\n\n      this.logoURL = this.mosqueprofile.src;\n      this.mosque_name = this.mosqueprofile.mosque1 + ' ' + this.mosqueprofile.mosque2;\n      this.mosque_info = this.mosqueprofile.address + ' | ' + this.mosqueprofile.telephone;\n\n      this.time_interval = setInterval(() => {\n        this.date = new Date();\n        this.time_now = Date.now();\n        this.today_day = this.weekday_bm[this.date.getDay()];\n\n        this.today_date = this.date.getDate();\n        this.today_year = this.date.getFullYear();\n        this.today_month = this.month_bm[this.date.getMonth()];\n        \n      }, 1000);\n    });\n\n    \n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EA2C/BC,YACUC,oBAA0C;IAA1C,KAAAA,oBAAoB,GAApBA,oBAAoB;IA3C9B,KAAAC,UAAU,GAAG,CACX,MAAM,EACN,OAAO,EACP,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,OAAO,CACR;IACD,KAAAC,QAAQ,GAAG,CACT,SAAS,EACT,UAAU,EACV,KAAK,EACL,OAAO,EACP,KAAK,EACL,KAAK,EACL,OAAO,EACP,MAAM,EACN,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;IAGD,KAAAC,SAAS,GAAG,EAAE;IACd,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,WAAW,GAAG,EAAE;IAChB,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,YAAY,GAAG,EAAE;IAGjB,KAAAC,WAAW,GAAG,EAAE;IAEhB,KAAAC,WAAW,GAAG,EAAE;EAUd;EAEFC,QAAQA,CAAA;IAEN,IAAI,CAACV,oBAAoB,CAACW,GAAG,CAAC,CAAC,CAAC,CAACC,SAAS,CAAEC,IAAS,IAAI;MACvD,IAAI,CAACC,aAAa,GAAGD,IAAI;MAEzB,IAAI,CAACE,OAAO,GAAG,IAAI,CAACD,aAAa,CAACE,GAAG;MACrC,IAAI,CAACR,WAAW,GAAG,IAAI,CAACM,aAAa,CAACG,OAAO,GAAG,GAAG,GAAG,IAAI,CAACH,aAAa,CAACI,OAAO;MAChF,IAAI,CAACT,WAAW,GAAG,IAAI,CAACK,aAAa,CAACK,OAAO,GAAG,KAAK,GAAG,IAAI,CAACL,aAAa,CAACM,SAAS;MAEpF,IAAI,CAACC,aAAa,GAAGC,WAAW,CAAC,MAAK;QACpC,IAAI,CAACC,IAAI,GAAG,IAAIC,IAAI,EAAE;QACtB,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,GAAG,EAAE;QAC1B,IAAI,CAACvB,SAAS,GAAG,IAAI,CAACF,UAAU,CAAC,IAAI,CAACsB,IAAI,CAACI,MAAM,EAAE,CAAC;QAEpD,IAAI,CAACvB,UAAU,GAAG,IAAI,CAACmB,IAAI,CAACK,OAAO,EAAE;QACrC,IAAI,CAACtB,UAAU,GAAG,IAAI,CAACiB,IAAI,CAACM,WAAW,EAAE;QACzC,IAAI,CAACxB,WAAW,GAAG,IAAI,CAACH,QAAQ,CAAC,IAAI,CAACqB,IAAI,CAACO,QAAQ,EAAE,CAAC;MAExD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EAGJ;CACD;AAtEYhC,oBAAoB,GAAAiC,UAAA,EALhClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWpC,oBAAoB,CAsEhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}